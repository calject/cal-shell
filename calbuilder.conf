# ======== 项目配置参数 ========
# 生成文件夹路径及名称
home=~/.cal-shell

# 构建命令别名
s_command=calbuilder

# 生成资源文件名
s_name=cal-shell.sources

# ======== 同步服务器ssh配置 ========
# 不存在cal-shell项目是否clone项目(0: 关闭自动clone 1:开启自动clone) 默认关闭
sync_create=0
# clone项目地址,替换为自己的项目地址(使用ssh连接地址),示例(git@github.com:calject/cal-shell.git)
sync_project=git@github.com:calject/cal-shell.git
# clone项目路径,默认为(~)家目录下(注: 路径使用''标识字符)
sync_path='~'
# 待同步的ssh连接主机名(.ssh/config 下定义的Host, 例 api-a)
sync_host=()

# ======== model配置参数(拓展部分在后面加入对应的model,示例: models=(shell php python perl java),默认实现shell、alias、export、func、fpath、expand) ========
models=(shell alias export func fpath)

# model配置参数(suffix: 文件规则参数; path: 扫描脚本路径参数)
types=(suffix path)

# ======== suffix(加载的文件规则可使用通配符[plugin仅支持后缀匹配*.xx或.zsh],示例: .sh *.sh *cal*.zsh *_plugin.sh ...) ========
shell_suffix=(*.h *.sh *.zsh)
alias_suffix=(*.alias)
export_suffix=(*.exp)
func_suffix=(*.func)
plugin_suffix=(*.plugin)
fpath_suffix=(_*.f)
# expand_suffix=()

# ======== path(model扫描的文件或目录([.或者空]代表当前项目路径),示例: shell ./shell /Users/calject/shell ~/.shell ~/.shell/do.sh ...) ========
shell_path=(shell zsh tests/shell)
alias_path=(alias)
export_path=(export)
func_path=(func)
plugin_path=(plugins)
fpath_path=(fpath)
# expand_path=()

# ======== plugin(拓展示例php脚本拓展[在models中加入php以开启]) ========
php_suffix=(*.php)
php_path=(tests/php)

python_suffix=(*.py)
python_path=(tests/python)

# ======== 保留末尾的空行 ========
